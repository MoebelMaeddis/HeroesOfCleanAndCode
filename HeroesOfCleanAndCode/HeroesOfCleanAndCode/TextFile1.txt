// Create Grid
            Grid mainGrid = new Grid();
            this.Content = mainGrid;

            // Create Rows for Grid
            RowDefinition row1 = new RowDefinition();
            row1.Height = GridLength.Auto;
            mainGrid.RowDefinitions.Add(row1);

            RowDefinition row2 = new RowDefinition();
            row2.Height = GridLength.Auto;
            mainGrid.RowDefinitions.Add(row2);

            // Create Border
            Border gameGridBorder = new Border();
            gameGridBorder.BorderBrush = Brushes.Black; // Replace with your StaticResource
            gameGridBorder.BorderThickness = new Thickness(2);
            gameGridBorder.HorizontalAlignment = HorizontalAlignment.Center;
            gameGridBorder.VerticalAlignment = VerticalAlignment.Center;
            Grid.SetRow(gameGridBorder, 0);
            mainGrid.Children.Add(gameGridBorder);

            // Create UniformGrid
            UniformGrid gameGrid = new UniformGrid();
            gameGrid.Width = 1700;
            gameGrid.Height = 850;
            gameGrid.Columns = 10;
            gameGrid.Rows = 10;
            gameGrid.Background = Brushes.White; // Replace with your StaticResource
            gameGrid.SnapsToDevicePixels = true;
            RenderOptions.SetBitmapScalingMode(gameGrid, BitmapScalingMode.HighQuality);
            gameGridBorder.Child = gameGrid;
            
            // Create Style for UniformGrid
            Style imageStyle = new Style(typeof(Image));
            imageStyle.Setters.Add(new Setter(Image.MarginProperty, new Thickness(0)));
            gameGrid.Resources.Add(typeof(Image), imageStyle);

            // Create InfoGrid
            Grid infoGrid = new Grid();
            Grid.SetRow(infoGrid, 1);
            mainGrid.Children.Add(infoGrid);

            // Add ColumnDefinitions to InfoGrid
            for (int i = 0; i < 6; i++)
            {
                ColumnDefinition column = new ColumnDefinition();
                column.Width = (i == 0 || i == 5) ? new GridLength(1, GridUnitType.Star) : GridLength.Auto;
                infoGrid.ColumnDefinitions.Add(column);
            }

            // Add RowDefinitions to InfoGrid
            for (int i = 0; i < 2; i++)
            {
                RowDefinition row = new RowDefinition();
                row.Height = GridLength.Auto;
                infoGrid.RowDefinitions.Add(row);
            }

            // Add TextBlocks to InfoGrid
            // Replace with your actual TextBlocks
            TextBlock activeEntityName = new TextBlock();
            activeEntityName.Text = "ACTIVE ENTITY NAME";
            Grid.SetColumn(activeEntityName, 1);
            Grid.SetRow(activeEntityName, 0);
            infoGrid.Children.Add(activeEntityName);
        }

        private Image[,] SetupEmptyMap(Map map)
        {
            int sizeY = (int)map.mapSize;
            int sizeX = sizeY * (int)map.mapRelation;
            Image[,] images = new Image[sizeX, sizeY];

            for (int y = 0; y < sizeY; y++)
            {
                for (int x = 0; x < sizeX; x++)
                {
                    Image image = new Image { Source = Images.Empty };
                    images[x, y] = image;
                }
            }
            return images;
        }